# application.yml
# Spring Cloud Gateway와 RabbitMQ 설정을 위한 YAML 설정 파일

spring:
  application:
    # 애플리케이션 이름 설정 - 로깅, 모니터링, 서비스 디스커버리 등에서 사용됨
    name: api-gateway
  
  cloud:
    gateway:
      # 기본 필터 설정 - 모든 경로에 적용됨
      default-filters:
        # 중복된 응답 헤더를 제거하는 필터 (CORS 관련 헤더를 위한 설정)
        # RETAIN_FIRST: 여러 개의 동일한 헤더가 있을 경우 첫 번째 값만 유지
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST
    
    # Spring Cloud 호환성 검증 비활성화 (불필요한 경고 메시지 제거)
    compatibility-verifier:
      enabled: false
  
  # RabbitMQ 연결 설정
  # RabbitMQ는 메시지 큐 시스템으로, API Gateway와 마이크로서비스 간의 비동기 통신에 사용
  rabbitmq:
    # RabbitMQ 서버 호스트 (로컬 개발 환경의 경우 localhost)
    host: localhost
    # RabbitMQ 서버 포트 (기본 포트는 5672)
    port: 5672
    # RabbitMQ 접속 계정 정보
    username: rabbitmq
    password: 1234

# 서버 설정
server:
  # API Gateway가 실행될 포트 설정
  port: 8080

# 로깅 설정
logging:
  level:
    # 기본 로그 레벨 (INFO: 일반적인 애플리케이션 동작 정보)
    root: INFO
    # Spring Cloud Gateway의 자세한 로그 활성화 (DEBUG: 더 상세한 정보)
    org.springframework.cloud.gateway: DEBUG
    # RabbitMQ/AMQP 관련 로그 활성화 (DEBUG: 메시지 송수신 관련 상세 정보)
    org.springframework.amqp: DEBUG
    # 커스텀 로깅 필터에 DEBUG 레벨 적용 (상세 요청/응답 정보)
    com.linkedout.api-gateway.filter.LoggingFilter: DEBUG
  
  # 로그 출력 패턴 설정
  pattern:
    # 로그 형식: 타임스탬프 | 로그 레벨 | 프로세스 ID | 스레드 | 로거 이름 | 메시지
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) [%X{correlationId}] [%thread] %logger{15} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{correlationId}] [%thread] %logger{15} - %msg%n"
  
  # 로그 파일 설정
  file:
    # 로그 파일 경로 (옵션)
    name: logs/api-gateway.log
    # 로그 파일 최대 크기 및 보관 설정
    max-size: 10MB
    max-history: 30